
import React, { useEffect, useRef } from "react";
import * as THREE from "three";

export default function CharacterCard({ character, onClick }) {
  const mountRef = useRef();

  useEffect(() => {
    const width = 120, height = 160;
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ alpha: true });
    renderer.setSize(width, height);
    mountRef.current.appendChild(renderer.domElement);

    const light = new THREE.PointLight(0xffffff, 1, 100);
    light.position.set(10, 10, 10);
    scene.add(light);

    const geometry = new THREE.BoxGeometry();
    const material = new THREE.MeshPhongMaterial({ color: 0x00ff00 });
    const cube = new THREE.Mesh(geometry, material);
    scene.add(cube);

    camera.position.z = 5;

    let hover = false;
    const handleMouseEnter = () => { hover = true; };
    const handleMouseLeave = () => { hover = false; };
    mountRef.current.addEventListener("mouseenter", handleMouseEnter);
    mountRef.current.addEventListener("mouseleave", handleMouseLeave);

    const animate = function () {
      requestAnimationFrame(animate);
      cube.rotation.y += 0.01;
      cube.material.color.set(hover ? 0xffaa00 : 0x00ff00);
      renderer.render(scene, camera);
    };
    animate();

    return () => {
      mountRef.current.removeChild(renderer.domElement);
      mountRef.current.removeEventListener("mouseenter", handleMouseEnter);
      mountRef.current.removeEventListener("mouseleave", handleMouseLeave);
    };
  }, []);

  return (
    <div className="character-card" onClick={onClick}>
      <div ref={mountRef}></div>
      <p>{character.name}</p>
      <p>Lvl: {character.level} | XP: {character.xp}</p>
    </div>
  );
}